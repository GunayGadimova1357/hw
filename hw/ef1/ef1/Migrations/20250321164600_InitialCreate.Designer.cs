// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ef1.Data;

#nullable disable

namespace ef1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250321164600_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ef1.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Toyota",
                            Model = "Camry",
                            Price = 2500000m,
                            Year = 2022
                        },
                        new
                        {
                            Id = 2,
                            Brand = "BMW",
                            Model = "X5",
                            Price = 4500000m,
                            Year = 2021
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Mercedes",
                            Model = "C-Class",
                            Price = 3500000m,
                            Year = 2023
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Audi",
                            Model = "A6",
                            Price = 3700000m,
                            Year = 2022
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Ford",
                            Model = "Focus",
                            Price = 1800000m,
                            Year = 2020
                        });
                });

            modelBuilder.Entity("ef1.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "ivan@test.com",
                            Name = "Иван Иванов",
                            Phone = "111-111"
                        },
                        new
                        {
                            Id = 2,
                            Email = "olga@test.com",
                            Name = "Ольга Петрова",
                            Phone = "222-222"
                        },
                        new
                        {
                            Id = 3,
                            Email = "alexey@test.com",
                            Name = "Алексей Смирнов",
                            Phone = "333-333"
                        },
                        new
                        {
                            Id = 4,
                            Email = "elena@test.com",
                            Name = "Елена Козлова",
                            Phone = "444-444"
                        },
                        new
                        {
                            Id = 5,
                            Email = "dmitry@test.com",
                            Name = "Дмитрий Васильев",
                            Phone = "555-555"
                        },
                        new
                        {
                            Id = 6,
                            Email = "anna@test.com",
                            Name = "Анна Михайлова",
                            Phone = "666-666"
                        },
                        new
                        {
                            Id = 7,
                            Email = "sergey@test.com",
                            Name = "Сергей Кузнецов",
                            Phone = "777-777"
                        },
                        new
                        {
                            Id = 8,
                            Email = "marina@test.com",
                            Name = "Марина Попова",
                            Phone = "888-888"
                        },
                        new
                        {
                            Id = 9,
                            Email = "artem@test.com",
                            Name = "Артем Соколов",
                            Phone = "999-999"
                        },
                        new
                        {
                            Id = 10,
                            Email = "yulia@test.com",
                            Name = "Юлия Николаева",
                            Phone = "101-101"
                        });
                });

            modelBuilder.Entity("ef1.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Олег Сидоров",
                            Position = "Менеджер"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Мария Алексеева",
                            Position = "Менеджер"
                        });
                });

            modelBuilder.Entity("ef1.Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            CustomerId = 1,
                            EmployeeId = 1,
                            SaleDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CarId = 2,
                            CustomerId = 2,
                            EmployeeId = 2,
                            SaleDate = new DateTime(2024, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CarId = 3,
                            CustomerId = 3,
                            EmployeeId = 1,
                            SaleDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CarId = 4,
                            CustomerId = 4,
                            EmployeeId = 2,
                            SaleDate = new DateTime(2024, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CarId = 5,
                            CustomerId = 5,
                            EmployeeId = 1,
                            SaleDate = new DateTime(2024, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ef1.Models.ServiceHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ServiceDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("ServiceHistories");
                });

            modelBuilder.Entity("ef1.Models.Sale", b =>
                {
                    b.HasOne("ef1.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ef1.Models.Customer", "Customer")
                        .WithMany("Sales")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ef1.Models.Employee", "Employee")
                        .WithMany("Sales")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("ef1.Models.ServiceHistory", b =>
                {
                    b.HasOne("ef1.Models.Car", "Car")
                        .WithMany("ServiceHistories")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("ef1.Models.Car", b =>
                {
                    b.Navigation("ServiceHistories");
                });

            modelBuilder.Entity("ef1.Models.Customer", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("ef1.Models.Employee", b =>
                {
                    b.Navigation("Sales");
                });
#pragma warning restore 612, 618
        }
    }
}
